option_settings:
  aws:elasticbeanstalk:container:python:
    WSGIPath: wsgi:application
  aws:elasticbeanstalk:application:environment:
    PYTHONPATH: "/var/app/current:$PYTHONPATH"

files:
  "/etc/nginx/conf.d/session_routing.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      # Extract session_id from request body for chat continuity
      map $request_body $session_id_from_body {
          default "";
          "~*\"session_id\":\"([^\"]+)\"" $1;
      }
      
      # Extract session_id from URL path
      map $uri $session_id_from_path {
          default "";
          "~*/session/([^/]+)" $1;
      }
      
      # Extract from query parameters
      map $args $session_id_from_query {
          default "";
          "~*session_id=([^&]*)" $1;
      }
      
      # Use the first available session_id for routing
      map $session_id_from_body$session_id_from_path$session_id_from_query $final_session_id {
          default "no_session";
          "~(.+)" $1;
      }
      
      # Final routing key for session continuity
      map $final_session_id $routing_key {
          "no_session" "round_robin_$request_id";
          default $final_session_id;
      }
      
      # Upstream with session-based routing
      upstream druk_workers {
          hash $routing_key consistent;
          server 127.0.0.1:8000;
      }
      
      server {
          listen 80;
          server_name _;
          
          # File upload support for document processing
          client_max_body_size 100M;
          
          # Extended timeouts for AI responses
          proxy_connect_timeout       180s;
          proxy_send_timeout          180s;
          proxy_read_timeout          180s;
          
          location / {
              # Set routing for session continuity
              set $session_id $routing_key;
              
              proxy_pass http://druk_workers;
              
              # Standard proxy headers
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
              
              # Session routing debug headers
              proxy_set_header X-Session-ID $final_session_id;
              proxy_set_header X-Routing-Key $routing_key;
              
              # WebSocket support for real-time chat
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection "upgrade";
              
              # Add Bhutan-specific headers
              add_header X-Service "Ask-Druk-Bhutan-AI" always;
              add_header X-Powered-By "Druk-AI-Assistant" always;
          }
          
          # Health check endpoint
          location /health {
              proxy_pass http://127.0.0.1:8000/health;
              access_log off;
          }
          
          # Emergency contact endpoint (public access)
          location /emergency-contacts {
              proxy_pass http://127.0.0.1:8000/emergency-contacts;
              access_log off;
              add_header Cache-Control "public, max-age=3600";
          }
      }

  "/opt/elasticbeanstalk/hooks/appdeploy/post/98_set_worker_env.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      # Set worker environment variable for Druk
      export WORKER_ID="druk-worker-$(hostname)"
      echo "WORKER_ID=druk-worker-$(hostname)" >> /opt/python/current/env
      echo "SERVICE_NAME=Ask-Druk-Bhutan-AI" >> /opt/python/current/env

  "/opt/elasticbeanstalk/hooks/appdeploy/post/97_create_knowledge_base.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      # Ensure knowledge base directory exists
      mkdir -p /var/app/current/knowledge_base
      chown webapp:webapp /var/app/current/knowledge_base
      
      # Set proper permissions for static files
      mkdir -p /var/app/current/static
      chown webapp:webapp /var/app/current/static

commands:
  01_install_ai_dependencies:
    command: "python -m pip install llama-index==0.12.27 openai==1.67.0"
    ignoreErrors: true
    
  02_verify_knowledge_base:
    command: "ls -la /var/app/current/knowledge_base/ || echo 'Knowledge base directory will be created'"
    ignoreErrors: true
