option_settings:
  aws:elasticbeanstalk:container:python:
    WSGIPath: wsgi:application
  aws:elasticbeanstalk:application:environment:
    PYTHONPATH: "/var/app/current"
    PORT: "8000"
  aws:elasticbeanstalk:environment:proxy:
    ProxyServer: nginx
  aws:elasticbeanstalk:environment:proxy:staticfiles:
    /static: static

files:
  "/etc/nginx/conf.d/nginx_optimization.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      # Nginx optimizations to fix warnings
      types_hash_max_size 2048;
      types_hash_bucket_size 128;
      server_names_hash_bucket_size 128;
      
      # Remove default server blocks to avoid conflicts
      server {
          listen 80 default_server;
          server_name _;
          return 444;  # Close connection for undefined hosts
      }

  "/opt/elasticbeanstalk/hooks/appdeploy/post/01_restart_nginx.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      echo "Restarting nginx after deployment..."
      systemctl restart nginx || service nginx restart
      echo "Nginx restarted successfully"

  "/opt/elasticbeanstalk/hooks/appdeploy/post/02_check_app_status.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      echo "Checking if application is running on port 8000..."
      sleep 10  # Give app time to start
      
      # Check if process is running
      if pgrep -f "gunicorn.*wsgi:application" > /dev/null; then
          echo "✅ Gunicorn process is running"
      else
          echo "❌ Gunicorn process not found"
          ps aux | grep gunicorn
      fi
      
      # Check if port 8000 is listening
      if netstat -tln | grep ":8000" > /dev/null; then
          echo "✅ Application is listening on port 8000"
      else
          echo "❌ Nothing listening on port 8000"
          netstat -tln | grep ":80"
      fi
      
      # Test local connection
      if curl -s http://127.0.0.1:8000/health > /dev/null; then
          echo "✅ Application responds to health check"
      else
          echo "❌ Application not responding on port 8000"
          echo "Checking application logs..."
          tail -20 /var/log/eb-engine.log
      fi

commands:
  01_install_dependencies:
    command: "pip install --upgrade pip setuptools wheel"
    ignoreErrors: true
    
  02_remove_conflicting_configs:
    command: "rm -f /etc/nginx/conf.d/druk_proxy.conf /etc/nginx/conf.d/session_routing.conf"
    ignoreErrors: true
