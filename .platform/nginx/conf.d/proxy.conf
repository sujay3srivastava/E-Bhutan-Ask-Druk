upstream askdruk_app {
    server 127.0.0.1:8000 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

# Main server configuration for Ask Druk
server {
    listen 80;
    server_name askdruk.eba-d3sy8ijg.us-east-1.elasticbeanstalk.com _;
    
    # Increase body size for document uploads
    client_max_body_size 100M;
    client_body_timeout 120s;
    
    # Add headers for debugging
    add_header X-Service-Info "Ask-Druk-Bhutan-AI" always;
    add_header X-Server-ID "$hostname" always;

    # Health check that doesn't proxy (for direct nginx health)
    location /nginx-health {
        access_log off;
        return 200 "Ask Druk Nginx OK\n";
        add_header Content-Type text/plain;
    }

    # Application health check
    location /health {
        proxy_pass http://askdruk_app/health;
        proxy_connect_timeout 10s;
        proxy_read_timeout 30s;
        proxy_send_timeout 30s;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Fallback if app is down
        error_page 502 503 504 = @health_fallback;
    }

    # Emergency contacts endpoint (critical - always available)
    location /emergency-contacts {
        proxy_pass http://askdruk_app/emergency-contacts;
        proxy_connect_timeout 5s;
        proxy_read_timeout 15s;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Always available fallback
        error_page 502 503 504 = @emergency_fallback;
    }

    # Static files
    location /static/ {
        alias /var/app/current/static/;
        expires 7d;
        add_header Cache-Control "public, immutable";
        
        # Fallback to app if file not found
        try_files $uri @app_static;
    }
    
    # Fallback for static files through app
    location @app_static {
        proxy_pass http://askdruk_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Main application
    location / {
        # Check if app is available first
        proxy_pass http://askdruk_app;
        
        # Connection and timeout settings
        proxy_connect_timeout 30s;
        proxy_read_timeout 300s;  # 5 minutes for AI processing
        proxy_send_timeout 120s;
        
        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support for real-time features
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
        
        # Error handling
        error_page 502 503 504 = @app_unavailable;
    }

    # Fallback when app is unavailable
    location @app_unavailable {
        return 503 '<!DOCTYPE html>
<html>
<head>
    <title>Ask Druk - Starting Up</title>
    <meta charset="UTF-8">
    <meta http-equiv="refresh" content="30">
    <style>
        body { 
            font-family: Arial, sans-serif; 
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white; margin: 0; padding: 40px;
            min-height: 100vh; display: flex; align-items: center; justify-content: center;
        }
        .container { 
            text-align: center; background: rgba(255,255,255,0.1); 
            padding: 40px; border-radius: 15px; backdrop-filter: blur(10px);
            max-width: 600px;
        }
        .flag { font-size: 64px; margin-bottom: 20px; }
        .spinner { 
            border: 4px solid rgba(255,255,255,0.3);
            border-radius: 50%; border-top: 4px solid #FFD700;
            width: 40px; height: 40px; margin: 20px auto;
            animation: spin 1s linear infinite;
        }
        @keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }
        .emergency { 
            background: rgba(255,0,0,0.2); padding: 20px; 
            border-radius: 10px; margin: 20px 0; border: 2px solid #FFD700;
        }
        .emergency h3 { margin-top: 0; color: #FFD700; }
    </style>
</head>
<body>
    <div class="container">
        <div class="flag">ðŸ‡§ðŸ‡¹</div>
        <h1>Kuzuzangpo! Ask Druk is Starting</h1>
        <div class="spinner"></div>
        <p>Our AI assistant is initializing to serve you better. This usually takes 1-2 minutes.</p>
        
        <div class="emergency">
            <h3>ðŸš¨ Emergency Contacts (Always Available)</h3>
            <p><strong>Police:</strong> 113 &nbsp;|&nbsp; <strong>Fire:</strong> 110 &nbsp;|&nbsp; <strong>Medical:</strong> 112</p>
            <p><strong>Traffic:</strong> 111 &nbsp;|&nbsp; <strong>Disaster:</strong> 999</p>
        </div>
        
        <p><small>Page will refresh automatically. If the issue persists for more than 5 minutes, please contact technical support.</small></p>
    </div>
</body>
</html>';
        add_header Content-Type text/html;
        add_header Refresh "30; url=$request_uri";
    }

    # Health check fallback
    location @health_fallback {
        return 503 '{"status":"starting","message":"Ask Druk is initializing","service":"Ask Druk Bhutan AI"}';
        add_header Content-Type application/json;
    }
    
    # Emergency contacts fallback (always works)
    location @emergency_fallback {
        return 200 '{
            "emergency_contacts": [
                {"service": "Police & General Emergency", "number": "113", "available": "24/7"},
                {"service": "Fire Department", "number": "110", "available": "24/7"},
                {"service": "Medical/Ambulance", "number": "112", "available": "24/7"},
                {"service": "Traffic Emergency", "number": "111", "available": "24/7"},
                {"service": "Disaster Helpline", "number": "999", "available": "24/7"},
                {"service": "Tourist Helpline", "number": "+975-2-323251", "available": "Office hours"}
            ],
            "status": "emergency_contacts_available",
            "note": "Emergency contacts are always available even when main service is down"
        }';
        add_header Content-Type application/json;
        add_header Cache-Control "public, max-age=86400";
    }
}

# WebSocket connection upgrade mapping
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}
